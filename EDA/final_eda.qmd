---
title: "Final Project Exploratory Data Analysis"
author: "Julia Vitale, Mia Zottoli, and Vishnu Lakshman"
format: html
editor: visual
execute: 
  error: true
  message: false
  warning: false
embed-resources: true
---

```{r load-libraries}

# Load necessary libraries
library(here)
library(tidyverse)
library(ggplot2)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ggfortify)
library(cluster)
```

```{r data-transformation}

# Load dataset
ultimate_data <- read_csv(here("data", "ulti_clean.csv")) %>%

```

## Exploring the Data

Answer the following questions:

-   What is your outcome variable(s)? How well does it measure the outcome you are interested? How does it relate to your expectations?

*Our outcome variable is plus_minus, which is the difference between the amount of points scored by an individual player's team while that player is on the field and the amount of points scored by the opposing team while that player is on the field. We are interested in the influence of an individual player on the success of the whole team, so this variable is a good measure of our outcome of interest.*

*Essentially, +/- for a select player = points scored by player's team (while player is on the field) - points scored by opposing team (while player is on the field)*

*The +/- score is used to track a player's overall effectiveness on the field and their impact on the game. A positive +/- score means the player's team scored more than the opposing team while the player was on the field, and a negative +/- score means the opposing team scored more while the player was on the field.*

-   What are your key explanatory variables?

    *Turns (turnovers) thrown per game, points scored per game, Ds (defensive interceptions) per game, assists per game, level (Division 1 or 3), division (Men's or Women's) and school.*

In addition, create a table of summary statistics for the variables you are planning to use.

```{r variable-summary}

# A table of summarizing statistics of the variables we are planning to use 
ultimate_data %>% select(-c(player, team_name)) %>% gtsummary::tbl_summary()
```

## Data Wrangling and Transformation

Answer the following question:

-   What data cleaning did you have to do?

    -   **The data was already pretty clean. We had to do some string manipulation to extract the school name from the team name, and had to convert some character variables to factors.**

-   How did you wrangle the data?

    -   **We did not have to do significant data wrangling for this data set. If we choose an analysis method that requires standardization, we will have to standardize the numeric variables.**

-   Are you deciding to exclude any observations? If so, why?

    -   **No, we are not excluding any observations. There are no extreme outliers.**

-   Did you have to create any new variables from existing variables? If so, how and why?

    -   **We created a 'school' variable which extracts the name of the college/university associated with the team name. Some schools have both men's and women's teams in this data set, and we are curious if school advantage transcends team-specific advantage.**

## Codebook

We have created a codebook in the README.md page in our repo on GitHub which contains a description of all the variables we are using.

You must add a *codebook* -- a description of all variables you are using, including ones you are creating for this project -- to the README.md page of the `data/` folder of your repo.

## Data Visualization

We have 11 data visualizations of our data made in R. Our outcome variable, which is `plus_minus`, is used in multiple visualizations. There are visualizations involving various different data types (categorical, numerical, continuous and discrete).

```{r gender-&-plus-minus}

# Plot player's plus-minus scores and their gender
ggplot(ultimate_data, aes(x = gender, y = plus_minus, fill = gender)) +
  geom_boxplot() +
  labs(
    title = "Gender vs. Player's +/- Score",
    x = "Gender",
    y = "Player's +/- Score"
  ) +
  theme_minimal()

# Filter table to create a new table called d3 that only contains d3 level players
d3 <- ultimate_data[ultimate_data$level == "Division 3",]

# Plot  Division 3 level player's plus-minus scores and their gender
ggplot(d3, aes(x = gender, y = plus_minus, fill = gender)) +
  geom_boxplot() +
  labs(
    title = "Division 3 Gender vs. Player's +/- Score",
    x = "Gender",
    y = "Player's +/- Score"
  ) +
  theme_minimal()

# Filter table to create a new table called d1 that only contains d3 level players
d1 <- ultimate_data[ultimate_data$level == "Division 1",]

# Plot  Division 1 level player's plus-minus scores and their gender
ggplot(d1, aes(x = gender, y = plus_minus, fill = gender)) +
  geom_boxplot() +
  labs(
    title = "Division 1 Gender vs. Player's +/- Score",
    x = "Gender",
    y = "Player's +/- Score"
  ) +
  theme_minimal()
```

```{r division-level-&-plus-minus}

# Plot player's plus-minus score against the divisional level they are playing in
ggplot(ultimate_data, aes(x = level, y = plus_minus, fill = level)) +
  geom_violin(trim = FALSE) +
  labs(
    title = "Player's +/- Score for Division 1 vs Division 3",
    x = "Division",
    y = "Player's +/- Score"
  ) +
  scale_fill_manual(values = c("Division 1" = "blue", "Division 3" = "pink")) + 
  theme_minimal()

# Filter table to create a new table called women_ultimate_data that only contains female players
women_ultimate_data <- ultimate_data %>%
  filter(gender == "Women")

# Plot female player's plus-minus score against the divisional level they are playing in
ggplot(women_ultimate_data, aes(x = level, y = plus_minus, fill = level)) +
  geom_violin(trim = FALSE) +
  labs(
    title = "Player's +/- Score for Division 1 vs Division 3 Women",
    x = "Division",
    y = "Player's +/- Score"
  ) +
  scale_fill_manual(values = c("Division 1" = "blue", "Division 3" = "pink")) + 
  theme_minimal()

# Filter table to create a new table called men_ultimate_data that only contains male players
men_ultimate_data <- ultimate_data %>%
  filter(gender == "Men")

# Plot male player's plus-minus score against the divisional level they are playing in
ggplot(men_ultimate_data, aes(x = level, y = plus_minus, fill = level)) +
  geom_violin(trim = FALSE) +
  labs(
    title = "Player's +/- Score for Division 1 vs Division 3 Men",
    x = "Division",
    y = "Player's +/- Score"
  ) +
  scale_fill_manual(values = c("Division 1" = "blue", "Division 3" = "pink")) + 
  theme_minimal()
```

```{r plus-minus-&-other-variable}

# Plot a player's plus-minus score and their points per game for the different divisions and genders
ultimate_data %>% ggplot(aes(x = pts_per_game, y = plus_minus, color = division)) + 
   geom_point() + geom_smooth(method = 'lm', se = F) + scale_x_log10() +
  labs(x = "Points per game", y = "Plus/Minus", color = "Division") + 
  theme_minimal() +
  scale_color_viridis_d()

# Plot a player's plus-minus score and their D's per game for the different divisions and genders
ultimate_data %>% ggplot(aes(x = ds_per_game, y = plus_minus, color = division)) + 
   geom_point() + geom_smooth(method = 'lm', se = F)+
  theme_minimal() + scale_x_log10() + 
  labs(x = "Ds per game", y = "Plus/Minus", color = "Division") +
  scale_color_viridis_d()

# Plot a player's plus-minus score and their turns per game for the different divisions and genders
ultimate_data %>% ggplot(aes(x = turns_per_game, y = plus_minus, color = division)) + 
   geom_point() + geom_smooth(method = 'lm', se = F) + scale_x_log10() +
  labs(x = "Turns per game", y = "Plus/Minus", color = "Division") + theme_minimal() +
  scale_color_viridis_d()

# Plot a player's plus-minus score and their assists per game for the different divisions and genders
ultimate_data %>% ggplot(aes(x = ast_per_game, y = plus_minus, color = division)) + 
   geom_point() + geom_smooth(method = 'lm', se = F) + scale_x_log10() +
  labs(x = "Assists per game", y = "Plus/Minus", color = "Division") + theme_minimal() +
  scale_color_viridis_d()
```

```{r PCA}

# Create a dataset df1 by selecting the following the columns below
df1 <- ultimate_data %>% select(c(
  turns_per_game, ds_per_game, pts_per_game, pls_mns_per_game, ast_per_game
))

# Perform principle component analysis on df1 
pca <- (princomp(df1))

# Plots the three clusters
autoplot(pam(df1[-4], 3), frame = TRUE) + theme_minimal() +
  labs(frame = "Cluster", title = "Principal component analysis of Ultimate data")
```
